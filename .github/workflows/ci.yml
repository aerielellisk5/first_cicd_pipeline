name: CICD
on: 
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Use NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: npm ci
      # what is the difference between npm ci and npm install
      - run: npm run format
      - run: npm run format:check  
      - run: npm test -- --coverage
        env:
          CI: true
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v3 
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: |
          npm run build
      - name: Upload Build Coverage
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3 
        with:
          name: build
          path: build
      
      # - uses: actions/download-artifact
      # allows the artifact to be downloaded in your workspace
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.CUSTOM_TOKEN }}

      - name: Deploy to staging environment
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

        # https://www.freecodecamp.org/news/error-error-0308010c-digital-envelope-routines-unsupported-node-error-solved/
        run: |
          # npx uninstall react-scripts
          # npx install react-scripts
          npx surge --project ./build --domain truculent-profit.surge.sh
    

      - name: Deploy to production environment
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          npx surge --project ./build --domain obtainable-neck.surge.sh
      - name: Open Issue
        if: failure() && github.event_name =='push'
        # this will run if any of the previous steps fail
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
           }' \
          # --fail

   
# something else here
# would like to trigger an action again